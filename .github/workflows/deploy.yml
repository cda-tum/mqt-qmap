name: Deploy to PyPI

on:
  release:
    types: [ published ]
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  Z3_GIT_TAG:   z3-4.8.15
  Z3_HASH:      5849baf1f53f04149b800eb8a5db7df5bcab1e3f6470bfcd74b0116b8baa1185

jobs:
  build_manylinux_wheels:
    name: Build wheels on Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v3
        name: Install Python
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.4.0
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_macos_wheels:
    name:    Build wheels on macOS
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v3
        name: Install Python
      - name: Install Z3
        run:  brew install z3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.4.0
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_macos_m1_wheels:
    name:    Build wheels on macOS for Apple Silicon
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v3
        name: Install Python
      - name: Install Z3
        run: |
             curl -L -H "Authorization: Bearer QQ==" -o ${{ env.Z3_GIT_TAG }}.big_sur.bottle.tar.gz https://ghcr.io/v2/homebrew/core/z3/blobs/sha256:${{ env.Z3_HASH }}
             brew install -f ${{ env.Z3_GIT_TAG }}.big_sur.bottle.tar.gz
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.4.0
        env:
          CIBW_ARCHS_MACOS: arm64
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_windows_wheels:
    name:    Build wheels on Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v3
        name: Install Python
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Cache Z3
        id:   cache-z3
        uses: actions/cache@v3
        with:
          path: z3
          key: ${{ runner.OS }}-z3-${{ env.Z3_GIT_TAG }}-static-2022
      - name:  Building Z3
        if:    steps.cache-z3.outputs.cache-hit != 'true'
        shell: bash
        run:   |
               git clone --branch $Z3_GIT_TAG --depth 1 https://github.com/Z3Prover/z3.git
               cmake -S z3 -B z3/build -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A x64 -DZ3_BUILD_LIBZ3_SHARED=FALSE -DZ3_BUILD_EXECUTABLE=False -DZ3_BUILD_TEST_EXECUTABLES=False
               cmake --build z3/build --config Release --parallel 8
      - name: Installing Z3
        shell: bash
        working-directory: ${{github.workspace}}/z3/build
        run: cmake --build . --config Release --target INSTALL;
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v3
        name: Install Python
      - name: Install Z3
        run: brew install z3
      - name: Build sdist
        run:  |
              pip install -q build
              python -m build --sdist
      - name: Test sdist
        run: pip install --verbose dist/*.tar.gz
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [ build_manylinux_wheels, build_macos_wheels, build_macos_m1_wheels, build_windows_wheels, build_sdist ]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user:          __token__
          password:      ${{ secrets.pypi_password }}
          skip_existing: true
          verbose:       true
