name: C++

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  CTEST_PARALLEL_LEVEL: 3
  Z3_VERSION: 4.11.2

jobs:
  cpp-tests:
    name: Tests ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, toolchain: "" }
          - { os: macos-latest, toolchain: "" }
          - { os: windows-latest, toolchain: "-T ClangCl" }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Z3
        uses: cda-tum/setup-z3@v1
        with:
          version: ${{ env.Z3_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_QMAP_TESTS=ON ${{ matrix.config.toolchain }}
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      - name: Build
        run: cmake --build build --config Release
      - name: Test
        run: ctest -C Release --output-on-failure --test-dir build --repeat until-pass:3 --timeout 300
      - if: runner.os == 'Linux'
        name: Coverage
        run: |
          cmake -S . -B buildCov -DCMAKE_BUILD_TYPE=Debug -DBUILD_QMAP_TESTS=ON -DENABLE_COVERAGE=ON
          cmake --build buildCov --config Debug
          ctest -C Debug --output-on-failure --test-dir buildCov --repeat until-pass:3 --timeout 300
      - if: runner.os == 'Linux'
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.4
        with:
          fail_ci_if_error: true
          flags: cpp
          gcov: true
          gcov_ignore: "extern/**/*"
          token: ${{ secrets.CODECOV_TOKEN }}
