name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  BUILD_TYPE: Release
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  Z3_GIT_TAG: z3-4.8.17

jobs:
  codestyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: DoozyX/clang-format-lint-action@v0.14
        with:
          source: "apps include src test mqt/qmap"
          extensions: "h,hpp,c,cpp"
          clangFormatVersion: 12

  ubuntu-ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.10"

      - name: Installing boost
        run: sudo apt-get install -y libboost-program-options-dev

      - name: Install Z3
        run: python -m pip install z3-solver

      - name: Configure CMake
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$pythonLocation/lib/python3.10/site-packages/z3/lib
          export Z3_ROOT=$pythonLocation/lib/python3.10/site-packages/z3
          export Z3_DIR=$pythonLocation/lib/python3.10/site-packages/z3
          cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_QMAP_TESTS=ON -DBINDINGS=ON

      - name: Build
        run: |
          cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --target qmap_heuristic
          cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --target qmap_exact
          cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --target qmap_heuristic_test
          cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --target qmap_exact_test

      - name: Test
        working-directory: ${{github.workspace}}/build/test
        run: ctest -C $BUILD_TYPE --output-on-failure

      - name: Coverage
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$pythonLocation/lib/python3.10/site-packages/z3/lib
          export Z3_ROOT=$pythonLocation/lib/python3.10/site-packages/z3
          export Z3_DIR=$pythonLocation/lib/python3.10/site-packages/z3
          cmake -S "${{github.workspace}}" -B "${{github.workspace}}/buildCov" -DCMAKE_BUILD_TYPE=Debug -DBUILD_QMAP_TESTS=ON -DCOVERAGE=ON -DBINDINGS=ON
          cmake --build "${{github.workspace}}/buildCov" --config Debug --target qmap_exact_test
          cmake --build "${{github.workspace}}/buildCov" --config Debug --target qmap_heuristic_test
          cd buildCov/test
          ctest -C $BUILD_TYPE --output-on-failure
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          gcov: true
          gcov_ignore: "extern/**/*"

  macOS-ci:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Installing boost and Z3
        run: brew install boost z3

      - name: Configure CMake
        run: cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_QMAP_TESTS=ON

      - name: Build
        run: |
          cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --target qmap_heuristic
          cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --target qmap_exact
          cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --target qmap_heuristic_test
          cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --target qmap_exact_test

      - name: Test
        working-directory: ${{github.workspace}}/build/test
        run: ctest -C $BUILD_TYPE --output-on-failure

  windows-ci:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Cache Z3
        id: cache-z3
        uses: actions/cache@v3
        with:
          path: z3
          key: ci-${{ runner.OS }}-${{ env.Z3_GIT_TAG }}-${{ hashFiles('**/ci.yml') }}

      - name: Building Z3
        if: steps.cache-z3.outputs.cache-hit != 'true'
        run: |
          git clone --branch $Z3_GIT_TAG --depth 1 https://github.com/Z3Prover/z3.git
          cmake -S z3 -B z3/build -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "Visual Studio 17 2022" -A x64 -DZ3_BUILD_LIBZ3_SHARED=FALSE -DZ3_BUILD_EXECUTABLE=False -DZ3_BUILD_TEST_EXECUTABLES=False
          cmake --build z3/build --config $BUILD_TYPE

      - name: Configure CMake
        run: cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -T "ClangCl" -DZ3_ROOT=z3/build -DBUILD_QMAP_TESTS=ON

      - name: Build
        run: cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE

      - name: Test
        working-directory: ${{github.workspace}}/build/test
        run: |
          cd $BUILD_TYPE
          ./qmap_exact_test
          ./qmap_heuristic_test
